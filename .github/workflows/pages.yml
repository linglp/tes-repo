# # Sample workflow for building and deploying a Jekyll site to GitHub Pages
# name: Deploy Jekyll with GitHub Pages dependencies preinstalled

# on:
#   # Runs on pushes targeting the default branch
#   push:
#     branches: ["main"]

#   # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:

# # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
# permissions:
#   contents: read
#   pages: write
#   id-token: write

# # Allow one concurrent deployment
# concurrency:
#   group: "pages"
#   cancel-in-progress: true

# jobs:
#   # Build job
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3
#       - name: Setup Pages
#         uses: actions/configure-pages@v2
#       - uses: actions/setup-python@v3
#       - name: Install Poetry
#         uses: snok/install-poetry@v1.3.1
#         with:
#           virtualenvs-create: true
#           virtualenvs-in-project: true
#       - name: Load cached venv
#         id: cached-poetry-dependencies
#         uses: actions/cache@v2
#         with:
#           path: .venv
#           key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
#       - name: Install dependencies
#         if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
#         run: poetry install --no-interaction --no-root
#       # - name: Build package documentation 
#       #   uses: ammaraskar/sphinx-action@master
#       #   with:
#       #     docs-folder: "docs/"
#       - name: Upload artifact
#         uses: actions/upload-pages-artifact@v1
#         with:
#           path: 'docs/build/html'

#   # Deployment job
#   deploy:
#     environment:
#       name: github-pages
#       url: ${{ steps.deployment.outputs.page_url }}
#     runs-on: ubuntu-latest
#     needs: build
#     steps:
#       - name: Deploy to GitHub Pages
#         id: deployment
#         uses: actions/deploy-pages@v1
name: Deploy documentation to github pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["develop-githubpages"] # for testing

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - uses: actions/setup-python@v4 
      - run: pip install sphinx
      - run: pip install myst-parser
      - run: pip install sphinxcontrib-mermaid
      - name: Sphinx Build
        uses: ammaraskar/sphinx-action@0.4
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: 'docs/build/html'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1