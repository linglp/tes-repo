name: Deploy documentation to github pages

on:
  # Runs on pushes targeting the default branch
  push:
    tags:
      - 'v[0-9].[0-9]+.[0-9]+'
   #branches: ["develop-testDoc3"] # for testing

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
# concurrency:
#   group: "pages"
#   cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v2
      - uses: actions/setup-python@v4 
        with: {python-version: "3.10"}
      - name: Install Poetry Action
        uses: snok/install-poetry@v1.3.1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      - name: Build documentation
        run: |
          cd docs/source
          poetry run sphinx-build -b html . ../_build
          touch ../_build/.nojekyll  
          cd ../../
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: 'docs/_build'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1